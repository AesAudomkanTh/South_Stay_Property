// src/components/HamburgerSheet.jsx
import React, { useEffect, useMemo } from "react";
import "./HamburgerSheet.css";
import { useAuth } from "../context/AuthContext";
import { Link } from "react-router-dom";

export default function HamburgerSheet({
  open,
  onClose,
  anchorRef,
  theme,
  onToggleTheme,
  lang,
  onToggleLang,
  onLogin,
  isAdmin,      // (optional) ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏∞‡πÇ‡∏ä‡∏ß‡πå‡∏õ‡∏∏‡πà‡∏° Admin
  onGoAdmin,    // (optional) callback ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ /admin
}) {
  const { user, isAuthenticated, logout } = useAuth();

  // ‚õëÔ∏è Hook ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà top-level ‡πÄ‡∏™‡∏°‡∏≠ (‡πÑ‡∏°‡πà‡∏ß‡∏≤‡∏á‡πÉ‡∏ô if)
  useEffect(() => {
    function handleClickOutside(e) {
      if (!open) return;
      const panel = document.getElementById("hamburger-panel");
      const btn = anchorRef?.current;
      if (panel && !panel.contains(e.target) && btn && !btn.contains(e.target)) {
        onClose?.();
      }
    }
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, [open, onClose, anchorRef]);

  // ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ‚Äî ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏Å‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å useMemo ‡πÄ‡∏™‡∏°‡∏≠)
  const name = useMemo(
    () => (user?.username || user?.first_name_th || "Guest"),
    [user]
  );
  const email = useMemo(() => (user?.email || ""), [user]);
  const verify = useMemo(
    () => user?.verify_status === 1 || user?.verify_status === "verified",
    [user]
  );
  const initials = useMemo(() => {
    const s = (name || "")
      .split(" ")
      .map((x) => x?.[0] || "")
      .join("")
      .slice(0, 2)
      .toUpperCase();
    return s || "U";
  }, [name]);

  // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï return ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å hook ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  if (!open) return null;

  return (
    <div className="hamburger-popover" role="dialog" aria-modal="true">
      <div id="hamburger-panel" className="hamburger-panel" style={{ zIndex: 5000 }}>
        <button className="hs-close" aria-label="‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π" onClick={onClose}>
          ‚úï
        </button>

        {/* Header: ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠ login ‡πÅ‡∏•‡πâ‡∏ß */}
        {isAuthenticated ? (
          <div className="hs-profile" style={{ marginBottom: "0.5rem" }}>
            <div className="hs-avatar" aria-hidden>{initials}</div>
            <div className="hs-info">
              <div className="hs-name">{name}</div>
              {email ? <div className="hs-email">{email}</div> : null}
              <div className={`hs-verify ${verify ? "ok" : "no"}`}>
                {verify ? "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÅ‡∏•‡πâ‡∏ß" : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô"}
              </div>
            </div>
          </div>
        ) : (
          <div className="hs-row hs-row--primary">
            <span>Sign in / Sign up</span>
          </div>
        )}

        <hr className="hs-divider" />

        {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏î‡∏¥‡∏° */}
        <div className="hs-list">
          <button type="button" className="hs-item" onClick={onToggleTheme}>
            <span className="hs-item__icon">üåó</span>
            <span>‡∏ò‡∏µ‡∏° (Theme)</span>
            <span className="hs-badge">{theme === "dark" ? "‡∏°‡∏∑‡∏î" : "‡∏™‡∏ß‡πà‡∏≤‡∏á"}</span>
          </button>

          <button type="button" className="hs-item" onClick={onToggleLang}>
            <span className="hs-item__icon">üåê</span>
            <span>‡∏†‡∏≤‡∏©‡∏≤ (Language)</span>
            <span className="hs-badge">{lang === "th" ? "‡πÑ‡∏ó‡∏¢" : "EN"}</span>
          </button>

          <Link to="/about" className="hs-item" onClick={onClose}>
            <span className="hs-item__icon">‚ÑπÔ∏è</span>
            <span>About</span>
            <span className="hs-arrow">‚Ä∫</span>
          </Link>

          {/* ‡πÄ‡∏°‡∏ô‡∏π‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠ login */}
          {isAuthenticated && (
            <>
              <Link to="/property" className="hs-item" onClick={onClose}>
                <span className="hs-item__icon">üè†</span>
                <span>‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
              </Link>

              <Link to="/post" className="hs-item" onClick={onClose}>
                <span className="hs-item__icon">‚ûï</span>
                <span>‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
              </Link>

              <Link to="/me" className="hs-item" onClick={onClose}>
                <span className="hs-item__icon">üë§</span>
                <span>‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</span>
              </Link>

              <Link to="/favorites" className="hs-item" onClick={onClose}>
                <span className="hs-item__icon">‚ù§Ô∏è</span>
                <span>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÉ‡∏à</span>
              </Link>

              <Link to="/my-posts" className="hs-item" onClick={onClose}>
                <span className="hs-item__icon">üóÇÔ∏è</span>
                <span>‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</span>
              </Link>

              {/* ‡∏õ‡∏∏‡πà‡∏° Admin ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô (‡πÑ‡∏°‡πà‡∏¢‡∏∏‡πà‡∏á Navbar) */}
              {isAdmin && (
                <button
                  type="button"
                  className="hs-item"
                  onClick={() => {
                    onClose?.();
                    onGoAdmin?.();
                  }}
                >
                  <span className="hs-item__icon">üõ°Ô∏è</span>
                  <span>Admin Dashboard</span>
                  <span className="hs-arrow">‚Ä∫</span>
                </button>
              )}
            </>
          )}
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡πâ‡∏≤‡∏¢ panel */}
        <div className="hsheet-footer">
          {!isAuthenticated ? (
            <button className="hs-btn primary" onClick={onLogin}>
              ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö / ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
            </button>
          ) : (
            <>
              <Link to="/post" className="hs-btn outline" onClick={onClose}>
                + ‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
              </Link>
              <button className="hs-btn danger" onClick={logout}>
                ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
              </button>
            </>
          )}
        </div>
      </div>
    </div>
  );
}
